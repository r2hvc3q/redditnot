ORG 0x7C00            ; Set the origin of the program to the bootloader address

BITS 16               ; Set the mode to 16-bit real mode

start:
    mov ax, 0x07C0     ; Set up the segment registers
    add ax, 288        ; to point at our buffer: 0x07C0:0x0200
    mov ss, ax
    mov sp, 4096

    mov ax, 0x07C0     ; Set the data segment register
    mov ds, ax

    mov si, hello_msg  ; Load the message address into SI

    call print_string  ; Call the print_string routine

    jmp $              ; Loop forever

print_string:
    mov ah, 0x0E       ; BIOS teletype function
.repeat:
    lodsb              ; Load the next character from SI
    cmp al, 0          ; Check for null terminator
    je .done
    int 0x10           ; Print the character
    jmp .repeat
.done:
    ret

hello_msg db 'Hello, World!', 0

times 510-($-$$) db 0  ; Pad the rest of the bootloader with zeros
dw 0xAA55             ; Add the boot signature
